{
  "ignorePatterns": [
    "next.config.js",
    "next-sitemap.js"
  ],
  "plugins": [
    "@typescript-eslint"
  ],
  "env": {
    "node": true,
    "browser": true,
    "jest": true
  },
  "extends": [
    "next/core-web-vitals",
    "airbnb",
    "airbnb-typescript"
  ],
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "rules": {
    "indent": ["error", 2],
    "linebreak-style": [
        "error",
        "unix"
    ],
    "max-len": [
      "error",
      {
        "code": 180,
        "comments": 200
      }
    ],
    "react/sort-comp": [1, {
      "order": [
        "static-methods",
        "lifecycle",
        "render",
        "everything-else"
      ]
    }],
    "object-property-newline": "error",
    "import/prefer-default-export": 0,
    "import/no-extraneous-dependencies": 0,
    "no-underscore-dangle": 0,
    "func-names": 0,
    "no-plusplus": 0,
    "no-return-assign": 0,
    "no-param-reassign": 0,
    "no-restricted-syntax": ["error", "BinaryExpression[operator='in']"],
    "no-unused-vars": 1,
    "class-methods-use-this": 0,
    "jsx-a11y/label-has-associated-control": 0,
    "jsx-a11y/control-has-associated-label": 0,
    "jsx-a11y/anchor-is-valid": [ "error", {
      "components": [ "Link" ],
      "specialLink": [ "hrefLeft", "hrefRight" ],
      "aspects": [ "invalidHref", "preferButton" ]
    }],
    "react/prop-types": 0,
    "react/jsx-props-no-spreading": 0,
    "react/require-default-props": 0,
    "react/no-did-update-set-state": 0,
    "react/react-in-jsx-scope": 0,
    "react/jsx-filename-extension": 0,
    // Too restrictive, writing ugly code to defend against a very unlikely scenario: https://eslint.org/docs/rules/no-prototype-builtins
    "no-prototype-builtins": "off",
    "import/no-default-export": 0,
    // Too restrictive: https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/destructuring-assignment.md
    "react/destructuring-assignment": "off",
    // Use function hoisting to improve code readability
    "no-use-before-define": [
      "error",
      { "functions": false, "classes": true, "variables": true }
    ],
    // Allow most functions to rely on type inference. If the function is exported, then `@typescript-eslint/explicit-module-boundary-types` will ensure it's typed.
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-use-before-define": [
      "error",
      { "functions": false, "classes": true, "variables": true, "typedefs": true }
    ],
    // Common abbreviations are known and readable
    "unicorn/prevent-abbreviations": "off",
    // Airbnb prefers forEach
    "unicorn/no-array-for-each": "off"
  }
}
